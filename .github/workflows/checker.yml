name: Checker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short
  # RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  DOCKER_BUILDKIT: 1

jobs:

  checker:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }

    name: Build and execute checker
    runs-on: ${{ matrix.target.os }}
    env:
      PRIV_GH_USER: ${{ secrets.ROBOT_TOPOSWARE_USER }}
      PRIV_GH_PACKAGE_TOKEN: ${{ secrets.ROBOT_TOPOSWARE_GH_PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.PRIV_GH_USER }}
          password: ${{ env.PRIV_GH_PACKAGE_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Building containers
        run: |
          docker-compose -f tools/docker-compose.yml build boot
          docker-compose -f tools/docker-compose.yml up -d peer
      - name: Checking for healthy cluster
        uses: nick-fields/retry@v2
        with:
          command: docker inspect --format "{{.State.Health.Status }}" $(docker-compose -f tools/docker-compose.yml ps -q peer)|grep "^healthy$"
          retry_on: error
          max_attempts: 3
          retry_wait_seconds: 15
          timeout_minutes: 5
      - name: Run the checker
        run: |
          docker-compose -f tools/docker-compose.yml run --no-deps checker 

