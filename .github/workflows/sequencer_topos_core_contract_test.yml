name: Sequencer Topos Core Contract interaction test

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # Change to specific Rust release to pin
  rust_clippy: 1.62.1
  REGISTRY: ghcr.io
  POLYGON_SUBNET_IMAGE_NAME: topos-network/polygon-edge
  POLYGON_SUBNET_IMAGE_TAG: develop
  TOPOS_SMART_CONTRACTS_IMAGE_NAME: topos-network/topos-smart-contracts
  TOPOS_SMART_CONTRACTS_IMAGE_TAG: main

jobs:
  deploy_smart_contracts_test_subnet_interaction:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - stable
          - nightly

    name: ${{ matrix.version }} - Deploy smart contracts and test sequencer subnet interaction
    runs-on: ${{ matrix.target.os }}
    env:
      PRIV_GH_USER: ${{ secrets.ROBOT_TOPOSWARE_USER }}
      PRIV_GH_PACKAGE_TOKEN: ${{ secrets.ROBOT_TOPOSWARE_GH_PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}
          components:
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.PRIV_GH_USER }}
          password: ${{ env.PRIV_GH_PACKAGE_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.POLYGON_SUBNET_IMAGE_NAME }}:${{ env.POLYGON_SUBNET_IMAGE_TAG }}

      - name: Run all workspace tests
        run: |
          export TOPOS_SMART_CONTRACTS_BUILD_PATH=`pwd`/contracts
          cd crates/topos-sequencer-subnet-runtime
          cargo test -- --nocapture
