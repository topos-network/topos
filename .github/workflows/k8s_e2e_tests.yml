name: E2E tests on Kubernetes

on:
  workflow_call:

jobs:
  retrieve-docker-tags:
    name: Retrieve docker tags from triggering workflow
    runs-on: ubuntu-latest
    outputs:
      docker_tags: ${{ steps.docker_tags.outputs.result }}
    steps:
      - name: Retrieve docker tags
        id: docker_tags
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "docker_tags"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
            });
            return download.data;
          result-encoding: string
  k8s:
    name: Deploy k8s cluster and run Observability Stack
    needs: retrieve-docker-tags
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/toposware/k8s_e2e:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.ROBOT_TOPOSWARE_GH_PACKAGE_TOKEN }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Enable remote modules download
        run: git config --global url."https://${{ secrets.ROBOT_TOPOSWARE_PRIV_REPOS_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Configure AWS credentials for cicd-devnet-1 account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::367397670706:role/TerraformRole
          role-session-name: Terraform-TerraformRole-session
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 3600

      - name: Terraform init
        working-directory: tools/terraform/cicd-devnet-1
        run: terraform init -backend-config=backend.conf

      - name: Terraform apply
        working-directory: tools/terraform/cicd-devnet-1
        run: terraform apply -auto-approve -var-file=terraform.tfvars

      - name: Configure kubeconfig
        working-directory: tools/terraform/cicd-devnet-1
        run: aws eks update-kubeconfig --region us-east-1 --name $(terraform output --raw cluster_name)

      - name: Helm Install
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.ROBOT_TOPOSWARE_PRIV_REPOS_TOKEN }}
          DOCKER_TAG: ${{ needs.retrieve-docker-tags.outputs.docker_tags }}
        run: |
          helmfile sync

      - name: Sleep
        run: sleep 30s
        shell: bash

      # - name: Terraform destroy
      #   working-directory: tools/terraform/cicd-devnet-1
      #   run: terraform destroy -auto-approve
