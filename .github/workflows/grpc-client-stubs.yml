name: gRPC client stubs generation

on:
  push:
    branches: [main]
    paths:
      - "**.proto"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "./crates/topos-api/**.proto"

jobs:
  js-grpc:
    name: JavaScript gRPC client stubs generation
    runs-on: ubuntu-latest-16-core

    steps:
      - uses: actions/checkout@v3

      - name: Install protoc
        run: sudo apt update && sudo apt install -y protobuf-compiler

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ./crates/topos-api/proto/package-lock.json
          registry-url: https://registry.npmjs.org
          scope: "@topos-protocol"

      - name: Install grpc-tool globally
        run: npm install -g grpc-tools

      - name: Install npm packages
        working-directory: ./crates/topos-api/proto
        run: npm ci

      - name: Generate client stubs
        working-directory: ./crates/topos-api/proto
        run: >
          mkdir generated &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/certificate.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/checkpoints.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/frost.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/stark_proof.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/subnet.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/shared/v1/uuid.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/uci/v1/certification.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/tce/v1/api.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/tce/v1/console.proto &&
          grpc_tools_node_protoc --js_out=import_style=commonjs,binary:./generated --grpc_out=grpc_js:./generated topos/tce/v1/synchronization.proto

      - name: Generate TypeScript typings
        working-directory: ./crates/topos-api/proto
        run: >
          protoc --plugin=protoc-gen-ts=./node_modules/.bin/protoc-gen-ts --ts_out=grpc_js:./generated -I . $(find ./topos -name '*.proto')

      - name: Check if npm package version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-name: ./crates/topos-api/proto/package.json
          file-url: https://unpkg.com/@topos-protocol/topos-grpc-client-stub@latest/package.json
          static-checking: localIsNew

      - name: Check coverage tolerance
        if: steps.check.outputs.changed == 'false'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Protobuf files were updated but npm package version was not bumped!')

      - name: Publish npm package
        if: steps.check.outputs.changed == 'true' && github.event_name == 'push'
        working-directory: ./crates/topos-api/proto
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
