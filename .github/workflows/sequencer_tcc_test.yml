name: Build and check

on:
  push:
    branches: [main]
  pull_request:
    branches: "**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # Change to specific Rust release to pin
  rust_clippy: 1.62.1
  REGISTRY: ghcr.io
  SUBSTRATE_SUBNET_IMAGE_NAME: toposware/substrate-subnet-node
  SUBSTRATE_SUBNET_IMAGE_TAG: test
  TOPOS_SMART_CONTRACTS_IMAGE_NAME: toposware/topos-smart-contracts
  TOPOS_SMART_CONTRACTS_IMAGE_TAG: test

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        target:
          - {
              name: Linux,
              os: ubuntu-latest-16-cores,
              triple: x86_64-unknown-linux-gnu,
            }
        version:
          - stable
          - nightly-2022-07-20

    name: ${{ matrix.version }} - Build and Test
    runs-on: ${{ matrix.target.os }}
    env:
      PRIV_GH_TOKEN: ${{ secrets.ROBOT_TOPOSWARE_PRIV_REPOS_TOKEN }}
      PRIV_GH_USER: ${{ secrets.ROBOT_TOPOSWARE_USER }}
    steps:
      - uses: actions/checkout@v3
      - name: Set git credentials
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://robot-toposware:${{ secrets.ROBOT_TOPOSWARE_PRIV_REPOS_TOKEN }}@github.com

      - name: Install Rust ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}
          components:
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: robot-toposware
          password: ${{ secrets.ROBOT_TOPOSWARE_GH_PACKAGE_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.SUBSTRATE_SUBNET_IMAGE_NAME }}:${{ env.SUBSTRATE_SUBNET_IMAGE_TAG }}
          docker pull ${{ env.REGISTRY }}/${{ env.TOPOS_SMART_CONTRACTS_IMAGE_NAME }}:${{ env.TOPOS_SMART_CONTRACTS_IMAGE_TAG }}
          docker images

      - name: Acquire built smart contracts
        run: |
          mkdir contracts
          docker create -ti --name dummy ${{ env.REGISTRY }}/${{ env.TOPOS_SMART_CONTRACTS_IMAGE_NAME }}:${{ env.TOPOS_SMART_CONTRACTS_IMAGE_TAG }} bash
          docker cp dummy:/usr/src/app/brownie/build/contracts/ToposCoreContract.json ./contracts/
          docker rm -f dummy

      - name: Run all workspace tests
        run: |
          export TOPOS_SMART_CONTRACTS_BUILD_PATH=`pwd`/contracts
          cd crates/topos-sequencer-subnet-runtime-proxy
          cargo test -- --nocapture