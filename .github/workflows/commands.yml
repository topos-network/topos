name: Run commands when comments added

on:
  issue_comment:
    types: [created]

concurrency:
  group: issue-commands-${{ github.event.issue.number }}

jobs:
  auth:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      auth: ${{ steps.auth.outputs.result }}
    steps:
      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Auth
        uses: actions/github-script@v6
        id: auth
        with:
          github-token: ${{ secrets.TOPOSWARE_READ_ORG }}
          result-encoding: string
          retries: 3
          # https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user
          script: |
            const resp = await github.rest.orgs.checkMembershipForUser({
              org: context.repo.owner,
              username: context.actor,
            });

            return resp.status == '204';

  run_command:
    needs: auth
    # The only supported command is /test
    if:  needs.auth.outputs.auth == 'true' && github.event.comment.body == '/test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Set environment
        id: env
        run: |
          # HEAD of main
          head="$(git rev-parse HEAD)"
          echo "head=${head}" >> $GITHUB_ENV
        shell: bash

      - uses: actions/github-script@v6
        with:
          script: |
            const check = await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'e2e-tests',
              sha: '${{ env.head }}',
              state: 'pending',
            })

      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: toposware
          repo: test-commands
          github_token: ${{ secrets.TOPOSWARE_DISPATCH_WORKFLOW }}
          workflow_file_name: docker_build_push.yml
          ref: main
          client_payload: '{ "git_commit": "${{ env.head }}", "docker_tag": "${{ github.event.issue.number }}" }'

  add_label:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    needs: run_command
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOPOSWARE_CREATE_LABEL }}
          script: |
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['ok-to-merge']
            })

  checkout:
    needs: run_command
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Set environment
        id: env
        run: |
          # HEAD of main
          head="$(git rev-parse HEAD)"
          echo "head=${head}" >> $GITHUB_ENV
        shell: bash

      - uses: actions/github-script@v6
        with:
          script: |
            const check = await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'e2e-tests',
              sha: '${{ env.head }}',
              state: '${{ needs.run_command.result }}',
            })
