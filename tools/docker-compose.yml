version: "3.3"
services:

  boot:
    container_name: boot
    command: boot tce run
    image: ghcr.io/topos-network/topos:main
    init: true
    labels:
      "autoheal": "true"
    healthcheck:
      test: ./topos tce push-peer-list --node http://localhost:1340 --format json /tmp/shared/peer_ids.json && ./topos tce status --node http://localhost:1340
      interval: 15s
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - FEATURES=tce,network
    depends_on:
      autoheal:
        condition: service_started
    ports:
      - "9090"
      - "1340:1340"
      - "3000:3000"
    env_file:
      - env/base.env
      - env/node.env
      - env/telemetry.env
    environment:
      - TCE_LOCAL_KS=1 # 12D3KooWRhFCXBhmsMnur3up3vJsDoqWh4c39PKXgSWwzAzDHNLn

  peer:
    image: ghcr.io/topos-network/topos:main
    command: peer tce run
    init: true
    labels:
      "autoheal": "true"
    healthcheck:
      test: ./topos tce push-peer-list --node http://localhost:1340 --format json /tmp/shared/peer_ids.json && ./topos tce status --node http://localhost:1340
      interval: 5s
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - FEATURES=tce
    depends_on:
      autoheal:
        condition: service_started
      boot:
        condition: service_started
    ports:
      - "9090"
      - "1340"
    deploy:
      replicas: 14
    env_file:
      - env/base.env
      - env/node.env
      - env/telemetry.env

  spammer:
    container_name: spam
    command: network spam
    image: ghcr.io/topos-network/topos:main
    init: true
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - FEATURES=network
    volumes:
      - shared:/tmp/shared
    env_file:
      - env/base.env
      - env/telemetry.env
      - env/spammer.env
    depends_on:
      boot:
        condition: service_healthy
      peer:
        condition: service_healthy

  check:
    container_name: check
    image: ghcr.io/topos-network/topos:main
    command: tce push-certificate -f json
    profiles:
      - CI
      - check
    init: true
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - GITHUB_TOKEN
        - FEATURES=tce
    depends_on:
      boot:
        condition: service_healthy
      peer:
        condition: service_healthy
    environment:
      - LOCAL_TEST_NET=true
      - RUST_LOG=info,topos=info
      - TARGET_NODES_PATH=/tmp/shared/peer_nodes.json

  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_INTERVAL=30
      - CURL_TIMEOUT=30

volumes:
  shared:
  prometheus_data: {}
  grafana_data: {}


networks:
  monitoring:
    driver: bridge


