services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686"
      - "14250:14250"
      - "16685:16685"

  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  boot:
    container_name: boot
    command: boot tce run
    image: ghcr.io/topos-network/topos:main
    init: true
    healthcheck:
      test: ./topos tce push-peer-list --endpoint http://localhost:1340 --format json /tmp/shared/peer_ids.json
      interval: 15s
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - FEATURES=tce
    depends_on:
      - otel-collector
    ports:
      - "9090"
      - "1340:1340"
    environment:
      - RUST_LOG=info,topos=debug
      - TOOLCHAIN_VERSION=stable
      - RUST_BACKTRACE=full
      - TCE_DB_PATH=/tmp/default-db
      - TCE_API_ADDR=0.0.0.0:1340
      - TCE_LOCAL_KS=1 # 12D3KooWRhFCXBhmsMnur3up3vJsDoqWh4c39PKXgSWwzAzDHNLn
      - TOPOS_OTLP_SERVICE_NAME=tce-boot-node
      - TOPOS_OTLP_AGENT=http://otel-collector:4317
      - TCE_ECHO_SAMPLE_SIZE=6
      - TCE_READY_SAMPLE_SIZE=6
      - TCE_DELIVERY_SAMPLE_SIZE=6
      - TCE_ECHO_THRESHOLD=2
      - TCE_READY_THRESHOLD=2
      - TCE_DELIVERY_THRESHOLD=2

  peer:
    image: ghcr.io/topos-network/topos:main
    command: tce run
    init: true
    healthcheck:
      test: ./topos tce push-peer-list --endpoint http://localhost:1340 --format json /tmp/shared/peer_ids.json && ./topos tce status --endpoint http://localhost:1340
      interval: 5s
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      args:
        - TOOLCHAIN_VERSION=stable
        - FEATURES=tce
    depends_on:
      jaeger:
        condition: service_started
      boot:
        condition: service_started
    ports:
      - "9090"
      - "1340"
    deploy:
      replicas: 15
    environment:
      - LOCAL_TEST_NET=true
      - RUST_LOG=info,topos=debug
      - TCE_DB_PATH=/tmp/default-db
      - TCE_API_ADDR=0.0.0.0:1340
      - TOPOS_OTLP_SERVICE_NAME=tce-regular-node
      - TOPOS_OTLP_AGENT=http://otel-collector:4317
      # Boot peers are injected by init.sh
      # - TCE_BOOT_PEERS=12D3KooWRhFCXBhmsMnur3up3vJsDoqWh4c39PKXgSWwzAzDHNLn /dns4/boot/tcp/9090
      - TCE_ECHO_SAMPLE_SIZE=6
      - TCE_READY_SAMPLE_SIZE=6
      - TCE_DELIVERY_SAMPLE_SIZE=6
      - TCE_ECHO_THRESHOLD=2
      - TCE_READY_THRESHOLD=2
      - TCE_DELIVERY_THRESHOLD=2

  cert-spammer:
    container_name: spam
    image: ghcr.io/toposware/cert-spammer:main
    init: true
    volumes:
      - shared:/tmp/shared
    environment:
      - RUST_LOG=info
      - CERT_PER_BATCH=1
      - BATCH_TIME_INTERVAL=4
      - TARGET_NODES_PATH=/tmp/shared/peer_nodes.json
    depends_on:
      jaeger:
        condition: service_started
      peer:
        condition: service_healthy

  verifier:
    container_name: verifier
    image: ghcr.io/toposware/topos-verifier:main
    command: verifier tce assert-delivery
    init: true
    volumes:
      - shared:/tmp/shared
    build:
      context: ../
      tags:
        - verifier
      args:
        - TOOLCHAIN_VERSION=stable
        - GITHUB_TOKEN
        - FEATURES=verifier
    depends_on:
      peer:
        condition: service_healthy
    environment:
      - LOCAL_TEST_NET=true
      - RUST_LOG=info,topos=debug
      - TARGET_NODES_PATH=/tmp/shared/peer_nodes.json

volumes:
  shared:
