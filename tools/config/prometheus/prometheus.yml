# my global config
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "my-project"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "alert.rules"
  # - "first.rules"
  # - "second.rules"

# alert
# alerting:
#   alertmanagers:
#   - scheme: http
#     static_configs:
#     - targets:
#       - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: "prometheus"

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ["localhost:9090"]


  - job_name: "peers"

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: [
                  'boot:3000',
                  'tools-peer-1:3000',
                  'tools-peer-2:3000',
                  'tools-peer-3:3000',
                  'tools-peer-4:3000',
                  'tools-peer-5:3000',
                  'tools-peer-6:3000',
                  'tools-peer-7:3000',
                  'tools-peer-8:3000',
                  'tools-peer-9:3000',
                  'tools-peer-10:3000',
                  'tools-peer-11:3000',
                  'tools-peer-12:3000',
                  'tools-peer-13:3000',
                  'tools-peer-14:3000',
                ]
    metric_relabel_configs:
      - source_labels: ["instance"]
        regex: ".*((boot|peer)[^:]*).*"
        target_label: "job"
        replacement: "$1"

