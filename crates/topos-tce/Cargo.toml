[package]
name = "topos-tce"
version = "0.1.0"
edition = "2021"
license = "MIT"
rust-version = "1.64"

[dependencies]
async-trait.workspace = true
futures.workspace = true
serde.workspace = true
thiserror.workspace = true
tokio.workspace = true
topos-core.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, default-features = false,  features = ["std", "env-filter", "fmt", "ansi"] }

tce_store = { package = "topos-tce-store", path = "../topos-tce-store" }
tce_transport = { package = "topos-tce-transport", path = "../topos-tce-transport" }
topos-p2p = { path = "../topos-p2p" }
topos-tce-api = { path = "../topos-tce-api"}
topos-tce-broadcast = { path = "../topos-tce-broadcast" }

# external dependencies
bincode = "1.3.3"
clap = { version = "3.0.10", features = ["derive", "env"] }
lazy_static = "1.4"
opentelemetry = { version = "0.18", features = ["rt-tokio", "metrics"] }
opentelemetry-otlp = { version = " 0.11", features = ["tonic", "metrics"] }
pretty_env_logger = "0.4.0"
tracing-opentelemetry = "0.18.0"
tracing-attributes = "0.1.23"

[dev-dependencies]
async-trait.workspace = true
libp2p.workspace = true
rand.workspace = true
rand_core.workspace = true
rand_distr.workspace = true
tonic.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }
tracing.workspace = true

env_logger = "0.9.1"
async-stream = "0.3.3"
cucumber = "0.13.0"
hyper = { version = "0.14", features = ["full"] }
test-log = { version = "0.2", features = ["trace"] }

# Commented because the test isn't compatible with gRPC health_check
# [[test]]
# name = "example" # this should be the same as the filename of your test target
# harness = false  # allows Cucumber to print output instead of libtest

[features]
default = []
log-json = ["tracing-subscriber/json"]

