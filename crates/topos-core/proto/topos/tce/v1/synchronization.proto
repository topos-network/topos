syntax = "proto3";

package topos.tce.v1;

import "topos/shared/v1/checkpoints.proto";
import "topos/shared/v1/certificate.proto";
import "topos/shared/v1/subnet.proto";
import "topos/shared/v1/uuid.proto";
import "topos/uci/v1/certification.proto";

service SynchronizerService {
  rpc fetch_checkpoint(CheckpointRequest) returns (CheckpointResponse);
  rpc fetch_certificates(FetchCertificatesRequest) returns (FetchCertificatesResponse);
}

message CheckpointRequest {
  // Provide a request_id to track response
  topos.shared.v1.UUID request_id = 1;

  repeated ProofOfDelivery checkpoint = 2;
}

message CheckpointResponse {
  // If the response is directly linked to a request this ID allow one to track it
  topos.shared.v1.UUID request_id = 1;

  repeated CheckpointMapFieldEntry checkpoint_diff = 2;
}

message CheckpointMapFieldEntry {
    string key = 1;
    repeated ProofOfDelivery value = 2;
}

message FetchCertificatesRequest {
  // Provide a request_id to track response
  topos.shared.v1.UUID request_id = 1;

  repeated topos.shared.v1.CertificateId certificates = 2;
}

message FetchCertificatesResponse {
  // Provide a request_id to track response
  topos.shared.v1.UUID request_id = 1;
  repeated topos.uci.v1.Certificate certificates =2;
}

message ProofOfDelivery {
  topos.shared.v1.Positions.SourceStreamPosition delivery_position = 1;
  repeated SignedReady readies = 2;
  uint64 threshold = 3;
}

message SignedReady {
    string ready = 1;
    string signature = 2;
}

